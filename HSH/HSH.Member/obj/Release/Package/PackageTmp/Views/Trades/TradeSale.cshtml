@model HSH.Data.Models.Member
@{
    ViewBag.Title = "Marketing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>
<hr />
@using (Html.BeginForm("TradeSale", "Trades", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmTradeSale", name = "frmTradeSale" }))
{
    @Html.AntiForgeryToken()

    //Price 1-2
    <div class="form-horizontal">
        <div class="form-group text-center">
            <div id="divLv1">
                <div class="col-md-3">
                    <div class="panel panel-danger" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Bid Price Level 1</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divBid1"></span>
                            </h1>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-primary" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Ask Price Level 1</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divAsk1"></span>
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
            <div id="divLv2">
                <div class="col-md-3">
                    <div class="panel panel-danger" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Bid Price Level 2</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divBid2"></span>
                            </h1>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-primary" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Ask Price Level 2</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divAsk2"></span>
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    //Price 3-4
    <div class="form-horizontal">
        <div class="form-group text-center">
            <div id="divLv3">
                <div class="col-md-3">
                    <div class="panel panel-danger" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Bid Price Level 3</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divBid3"></span>
                            </h1>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-primary" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Ask Price Level 3</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divAsk3"></span>
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
            <div id="divLv4">
                <div class="col-md-3">
                    <div class="panel panel-danger" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Bid Price Level 4</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divBid4"></span>
                            </h1>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-primary" style="text-align:center">
                        <div class="panel-heading">
                            <h3 class="panel-title">Ask Price Level 4</h3>
                        </div>
                        <div class="panel-body">
                            <h1>
                                <span id="divAsk4"></span>
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    //control search
    <div class="form-group" style="margin-left:15px">
        <div class="col-md-3">
            <label class="radio-inline">
                <input type="radio" name="rdo" value="1" checked> ขายทองฝาก
            </label>
            <label class="radio-inline">
                <input type="radio" name="rdo" value="0"> ส่งมอบทอง
            </label>
        </div>
        <div class="col-md-3" style="display:none">
            @Html.DropDownListFor(model => model.MemberId, null, htmlAttributes: new { @class = "form-control", id = "ddlMember" })
        </div>
        <div class="col-md-4">
            <input type="text" id="txtMember" class="form-control" maxlength="30" placeholder="ค้นหาชื่อหรือเลขที่บัญชีซื้อขายทองคำ" />
        </div>
        <input type="hidden" id="hdMemberId" />
        <input type="hidden" id="hdMemberLevel" />
        <input type="hidden" id="hdMemberRef" />
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><span id="spProfileDetail"><a href="#" style="text-decoration:none">ข้อมูลลูกค้า</a></span></h3>
        </div>
        <div id="divMemberProfile" class="table-responsive">
        </div>
    </div>


    ////Feed Order
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><span id="spOrder"><a href="#" style="text-decoration:none">ซื้อขายราคาปัจจุบัน</a></span></h3>
        </div>
        <div class="form-horizontal" id="divOrder">
            <br />
            <div class="form-group" style="margin-left:5px">
                <div class="col-md-2">
                </div>
                <div class="col-md-2">
                    @*<select class="form-control" id="ddlBidQuantity">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                            <option>10</option>
                        </select>*@
                    <input type="text" id="txtBidQty" class="form-control" maxlength="3" placeholder="Quantity" />
                </div>
                <div class="col-md-2">
                    <button id="btnBid" onclick="confirmTradeSale(this);" type="button" class="btn btn-danger" style="width:100px;font-size:large">ลูกค้าขาย</button>
                </div>

                <div class="col-md-2">
                </div>
                <div class="col-md-2">
                    @*<select class="form-control" id="ddlAskQuantity">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                            <option>10</option>
                        </select>*@
                    <input type="text" id="txtAskQty" class="form-control" maxlength="3" placeholder="Quantity" />
                </div>
                <div class="col-md-2">
                    <button id="btnAsk" onclick="confirmTradeSale(this);" type="button" class="btn btn-primary" style="width:100px;font-size:large">ลูกค้าซื้อ</button>
                </div>

            </div>
        </div>
    </div>

    //Place Order
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><span id="spPlace"><a href="#" style="text-decoration:none">ตั้งรอราคา</a></span></h3>
        </div>
        <div class="form-horizontal" id="divPlace">
            <br />
            <div class="form-group" style="margin-left:5px">
                <div class="col-md-2">
                    <input type="text" id="txtBidLeave" class="form-control" placeholder="Price" />
                </div>
                <div class="col-md-2">
                    @*<select class="form-control" id="ddlBidQuantityLeave">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                            <option>10</option>
                        </select>*@
                    <input type="text" id="txtBidQuantityLeave" class="form-control" placeholder="Quantity" />
                </div>
                <div class="col-md-2">
                    <button id="btnBidLeave" onclick="confirmTradeSale(this);" type="button" class="btn btn-danger" style="width:100px;font-size:large">ลูกค้าขาย</button>
                </div>
                <div class="col-md-2">
                    <input type="text" id="txtAskLeave" class="form-control" placeholder="Price" />
                </div>
                <div class="col-md-2">
                    @*<select class="form-control" id="ddlAskQuantityLeave">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                            <option>10</option>
                        </select>*@
                    <input type="text" id="txtAskQuantityLeave" class="form-control" placeholder="Quantity" />
                </div>
                <div class="col-md-2">
                    <button id="btnAskLeave" onclick="confirmTradeSale(this);" type="button" class="btn btn-primary" style="width:100px;font-size:large">ลูกค้าซื้อ</button>
                </div>

            </div>
        </div>
    </div>

    //Biglot
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><span id="spBig"><a href="#" style="text-decoration:none">ราคาพิเศษ</a></span></h3>
        </div>
        <div class="form-horizontal" id="divBig">
            <br />
            <div class="form-group" style="margin-left:5px">
                <div class="col-md-2">
                    <input type="text" id="txtBidLot" class="form-control" placeholder="Price" disabled="disabled" />
                </div>
                <div class="col-md-2">
                    <select class="form-control" id="ddlBidQuantityLot">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                        <option>7</option>
                        <option>8</option>
                        <option>9</option>
                        <option>10</option>
                        <option>11</option>
                        <option>12</option>
                        <option>13</option>
                        <option>14</option>
                        <option>15</option>
                        <option>16</option>
                        <option>17</option>
                        <option>18</option>
                        <option>19</option>
                        <option>20</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button id="btnBidLot" onclick="confirmTradeSale(this);" type="button" class="btn btn-danger" style="width:100px;font-size:large">ลูกค้าขาย</button>
                </div>
                <div class="col-md-2">
                    <input type="text" id="txtAskLot" class="form-control" placeholder="Price" disabled="disabled" />
                </div>
                <div class="col-md-2">
                    <select class="form-control" id="ddlAskQuantityLot">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                        <option>7</option>
                        <option>8</option>
                        <option>9</option>
                        <option>10</option>
                        <option>11</option>
                        <option>12</option>
                        <option>13</option>
                        <option>14</option>
                        <option>15</option>
                        <option>16</option>
                        <option>17</option>
                        <option>18</option>
                        <option>19</option>
                        <option>20</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button id="btnAskLot" onclick="confirmTradeSale(this);" type="button" class="btn btn-primary" style="width:100px;font-size:large">ลูกค้าซื้อ</button>
                </div>

            </div>
            <div class="form-group" style="margin-left:5px;margin-right:5px">
                <div id="divBigLot" class="table-responsive">
                </div>
            </div>
        </div>
    </div>



    <ul class="nav nav-tabs">
        <li class="active"><a href="#Order" data-toggle="tab">Transaction Order</a></li>
        <li class=""><a href="#Place" data-toggle="tab">Place Order</a></li>
        <li class=""><a href="#Accept" data-toggle="tab">Accept Order</a></li>
        <li class=""><a href="#Reject" data-toggle="tab">Reject Order</a></li>

    </ul>
    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade active in" id="Order">
            <div class="table-responsive">
                <table id="jqTable" class="table table-striped table-hover table-bordered table-responsive"></table>
                <div id="jqTablePager"></div>
            </div>
        </div>
        <div class="tab-pane fade" id="Place">
            <div class="table-responsive">
                <table id="jqTablePlace" class="table table-striped table-hover table-bordered table-responsive"></table>
                <div id="jqTablePagerPlace"></div>
            </div>
        </div>
        <div class="tab-pane fade" id="Accept">
            <div class="table-responsive">
                <table id="jqTableAccept" class="table table-striped table-hover table-bordered table-responsive"></table>
                <div id="jqTablePagerAccept"></div>
            </div>
        </div>
        <div class="tab-pane fade" id="Reject">
            <div class="table-responsive">
                <table id="jqTableReject" class="table table-striped table-hover table-bordered table-responsive"></table>
                <div id="jqTablePagerReject"></div>
            </div>
        </div>
    </div>

}

@section Scripts{

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <!-- The jQuery UI theme that will be used by the grid -->
    <link rel="stylesheet" type="text/css" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.3/themes/smoothness/jquery-ui.css" />
    <!-- The jQuery UI theme extension jqGrid needs -->
    <link rel="stylesheet" type="text/css" href="http://www.trirand.net/aspnetmvc/Content/themes/ui.jqgrid.css" />
    <!-- jQuery runtime minified -->
    <!-- The localization file we need, English in this case -->
    <script type="text/javascript" src="http://www.trirand.net/aspnetmvc/Scripts/trirand/i18n/grid.locale-en.js"></script>
    <!-- The jqGrid client-side javascript -->
    <script type="text/javascript" src="http://www.trirand.net/aspnetmvc/Scripts/trirand/jquery.jqGrid.min.js"></script>

    <!-- Refereces to the javascript client-side code of the jqDatePicker and jqAutoComplete controls to be used for editing -->
    <script type="text/javascript" src="http://www.trirand.net/aspnetmvc/Scripts/trirand/jquery.jqDatePicker.min.js"></script>
    <script type="text/javascript" src="http://www.trirand.net/aspnetmvc/Scripts/trirand/jquery.jqAutoComplete.min.js"></script>


    <link href="~/Scripts/TimeCircles/inc/TimeCircles.css" rel="stylesheet" />
    <script src="~/Scripts/TimeCircles/inc/TimeCircles.js"></script>
    <script language="javascript" type="text/javascript">

        // the url to
        var urlRoot = '@Url.Action("", "")';
        var jqDataUrl = urlRoot + "Trades/GetTradeOrderJson";



        $(document).ready(function () {

            var LoadGrid = function () {
                var grid = $("#jqTable");
                grid.jqGrid({
                    // Ajax related configurations
                    // url: jqDataUrl,
                    url: "@Url.Content("~/Trades/GetTradeOrder")",
                    data: {},
                    datatype: "json",
                    type: "GET",
                    colNames: ["TradeRef", "TradeType", "Quantity", "Price", "Amount", "Place order", "Status", "CreatedDate", "Deposit"],
                    colModel: [
                    { name: "TradeRef", index: "TradeRef", width: 160, align: "center", sortable: false },
                    { name: "TradeType", index: "TradeType", width: 100, align: "center", sortable: false },
                    { name: "Quantity", index: "Quantity", width: 100, align: "right", sortable: false },
                    { name: "Price", index: "Price", width: 100, align: "right", sortable: false },
                    { name: "Amount", index: "Amount", width: 100, align: "right", sortable: false },
                    { name: "Leave", index: "Leave", width: 120, align: "center", sortable: false },
                    { name: "Status", index: "Status", width: 120, align: "center", sortable: false },
                    { name: "CreateDate", index: "CreateDate", width: 160, align: "center", sortable: false },
                    { name: "UseDeposit", index: "UseDeposit", width: 140, align: "center", sortable: false }
                    //,{
                    //    name: "",index:"Actions", width: 70, align: "center", formatter: function (cellValue, options, rowdata) {

                    //        //return rowdata[6];// grid.getCell(options.rowId, 'TradeRef');
                    //        if (rowdata[6] == "Pending") {
                    //            return "<a href='#' onclick='alert('" + options.rowId + "');' ><span class='glyphicon glyphicon-trash'></span></a>";
                    //        }
                    //        else {
                    //            return "";// "<a href='#" + options.rowId + "' onclick='rejectTrade('" + options.rowId + "');return false;' ><span class='glyphicon glyphicon-trash'></span></a>";
                    //        }
                    //    }
                    //}
                    @*,{
                    name: 'actions', index: 'actions', formatter: 'actions',width:70,align:"center",
                    formatoptions: {
                        keys: true,
                        editbutton: false,
                        delbutton: true,
                        delOptions: {
                            onclickSubmit: function (rp_ge, rowid) {
                                $.ajax({
                                    type: "POST",
                                    dataType: "json",
                                    url: "@Url.Content("~/Trades/RejectTrade/")",
                                    data:{tradeRef:rowid},
                                async: false,
                                success: function (e) {
                                    //alert('success');
                                }
                            });
                //rp_ge.processing = true;
                //return false;
            }
            //,
            //processing: true
        },
        }
        }*@
                    ],
                    // Grid total width and height
                    width: 1025,
                    height: '100%',
                    // Paging
                    toppager: false,
                    pager: $("#jqTablePager"),
                    rowNum: 1000,     // disable page size dropdown
                    pgbuttons: false,     // disable page control like next, back button
                    pginput: false,
                    pgtext: null,
                    rowList: [],//[5, 10, 20],
                    viewrecords: true, // Specify if "total number of records" is displayed

                    // Default sorting
                    sortname: "",
                    sortorder: "desc",
                    loadtext: "Loading...",
                    caption: "",
                    loadComplete: reLoad = function (data) {

                        setTimeout(function () {
                            grid.setGridParam({ sortorder: "desc" }).trigger("reloadGrid");

                            //var oRecord = 0
                            //if (hdfRecord.value.toString() != "") {
                            //    oRecord = hdfRecord.value;
                            //    alert("x");
                            //}
                            //if (oRecord != e.records) {
                            //
                            //    hdfRecord.value = e.records;
                            //    alert("z");
                            //}
                            //alert(hdfRecord.value);
                        }, 4000);
                    },
                    afterInsertRow: function (rowid, rowdata, rowelem) {
                        //set class for color row
                        if (rowdata.Status == 'Accept') {
                            //grid.jqGrid('setRowData', rowid, '', { color: 'red' });
                            grid.jqGrid('setRowData', rowid, '', 'success'); //add class
                        } else {
                            //grid.jqGrid('setRowData', rowid,0,"xxxx");
                            //$('#' + rowId ).attr("disabled", false);
                        }
                    },
                    //loadComplete: function (data) {
                    //    //var ids = grid.jqGrid('getDataIDs');
                    //    //for (var i = 1; i <= ids.length; i++) {
                    //        //var rowId = ids[i];
                    //        // var rowData = jQuery('#list').jqGrid ('getRowData', rowId);


                    //        //var cont = grid.getCell(rowId, 'Status');
                    //        //alert(ids[i]);
                    //        //jQuery('#jDeleteButton_' + rowId, jQuery(this)).hide();

                    //        //if (grid.getCell(rowId, 'Status') == "Reject") {
                    //        //    //alert(grid.getCell(rowId, 'Status'));
                    //        //    //grid.jqGrid('setCell', rowId, 'Actions', "&nbsp;");
                    //        //    jQuery('#jDeleteButton_' + rowId, jQuery(this)).hide();
                    //        //    //jQuery('#jDeleteButton_' + rowId).hide();
                    //        //    grid.jqGrid('setCell', rowId, 'jDeleteButton_' + rowId, "&nbsp;");
                    //        //}
                    //    //}
                    //},
                }).navGrid("#jqTablePager",
            { refresh: false, add: false, edit: false, del: false, search: false },
                {}, // settings for edit
                {}, // settings for add
                {}, // settings for delete
                { sopt: ["cn"] } // Search options. Some options can be set on column level
         );
            };
            LoadGrid();


            //Place Order
            var LoadGridPlace = function () {
                var grid = $("#jqTablePlace");
                grid.jqGrid({
                    url: "@Url.Content("~/Trades/GetTradePlace")",
                    data: { orderType: "PlaceOrder" },
                    datatype: "json",
                    type: "GET",
                    colNames: ["เลขที่การซื้อขาย", "TradeType", "Quantity", "Price", "Amount", "Place order", "Status", "CreatedDate", "Deposit"],
                    colModel: [
                    { name: "TradeRef", index: "TradeRef", width: 160, align: "center", sortable: false },
                    { name: "TradeType", index: "TradeType", width: 100, align: "center", sortable: false },
                    { name: "Quantity", index: "Quantity", width: 100, align: "right", sortable: false },
                    { name: "Price", index: "Price", width: 100, align: "right", sortable: false },
                    { name: "Amount", index: "Amount", width: 100, align: "right", sortable: false },
                    { name: "Leave", index: "Leave", width: 120, align: "center", sortable: false },
                    { name: "Status", index: "Status", width: 120, align: "center", sortable: false },
                    { name: "CreateDate", index: "CreateDate", width: 160, align: "center", sortable: false },
                    { name: "UseDeposit", index: "UseDeposit", width: 140, align: "center", sortable: false }
                    ],
                    // Grid total width and height
                    width: 1025,
                    height: '100%',
                    // Paging
                    toppager: false,
                    pager: $("#jqTablePagerPlace"),
                    rowNum: 1000,     // disable page size dropdown
                    pgbuttons: false,     // disable page control like next, back button
                    pginput: false,
                    pgtext: null,
                    rowList: [],//[5, 10, 20],
                    viewrecords: true, // Specify if "total number of records" is displayed

                    // Default sorting
                    sortname: "",
                    sortorder: "desc",
                    loadtext: "Loading...",
                    caption: "",
                    loadComplete: reLoad = function (data) {

                        setTimeout(function () {
                            grid.setGridParam({ sortorder: "desc" }).trigger("reloadGrid");

                        }, 4000);
                    },
                    afterInsertRow: function (rowid, rowdata, rowelem) {
                        //set class for color row
                        if (rowdata.Status == 'Accept') {
                            grid.jqGrid('setRowData', rowid, '', 'success'); //add class
                        } else {
                        }
                    },

                }).navGrid("#jqTablePagerPlace",
                    { refresh: false, add: false, edit: false, del: false, search: false },
                        {}, // settings for edit
                        {}, // settings for add
                        {}, // settings for delete
                        { sopt: ["cn"] } // Search options. Some options can be set on column level
                 );
            };
            LoadGridPlace();


            //Accept
            var LoadGridAccept = function () {
                var grid = $("#jqTableAccept");
                grid.jqGrid({
                    datatype: "json",
                    type: "GET",
                    url: "@Url.Content("~/Trades/GetTradeAccept")",
                    data: {},
                    async: true,
                    colNames: ["TradeRef", "TradeType", "Quantity", "Price", "Amount", "Place order", "Status", "CreatedDate", "Deposit"],
                    colModel: [
                    { name: "TradeRef", index: "TradeRef", width: 160, align: "center", sortable: false },
                    { name: "TradeType", index: "TradeType", width: 100, align: "center", sortable: false },
                    { name: "Quantity", index: "Quantity", width: 100, align: "right", sortable: false },
                    { name: "Price", index: "Price", width: 100, align: "right", sortable: false },
                    { name: "Amount", index: "Amount", width: 100, align: "right", sortable: false },
                    { name: "Leave", index: "Leave", width: 120, align: "center", sortable: false },
                    { name: "Status", index: "Status", width: 120, align: "center", sortable: false },
                    { name: "CreateDate", index: "CreateDate", width: 160, align: "center", sortable: false },
                    { name: "UseDeposit", index: "UseDeposit", width: 140, align: "center", sortable: false }
                    ],
                    // Grid total width and height
                    width: 1025,
                    height: '100%',
                    // Paging
                    toppager: false,
                    pager: $("#jqTablePagerAccept"),
                    rowNum: 1000,     // disable page size dropdown
                    pgbuttons: false,     // disable page control like next, back button
                    pginput: false,
                    pgtext: null,
                    rowList: [],//[5, 10, 20],
                    viewrecords: true, // Specify if "total number of records" is displayed

                    // Default sorting
                    sortname: "",
                    sortorder: "desc",
                    loadtext: "Loading...",
                    caption: "",
                    loadComplete: reLoad = function (data) {

                        setTimeout(function () {
                            grid.setGridParam({ sortorder: "desc" }).trigger("reloadGrid");

                        }, 4000);
                    },
                    afterInsertRow: function (rowid, rowdata, rowelem) {
                        //set class for color row
                        if (rowdata.Status == 'Accept') {
                            grid.jqGrid('setRowData', rowid, '', 'success'); //add class
                        } else {
                        }
                    },

                }).navGrid("#jqTablePagerAccept",
                    { refresh: false, add: false, edit: false, del: false, search: false },
                        {}, // settings for edit
                        {}, // settings for add
                        {}, // settings for delete
                        { sopt: ["cn"] } // Search options. Some options can be set on column level
                 );
            };
            LoadGridAccept();

            //Reject
            var LoadGridReject = function () {
                var grid = $("#jqTableReject");
                grid.jqGrid({
                    url: "@Url.Content("~/Trades/GetTradeReject")",
                    data: {},
                    datatype: "json",
                    mtype: "POST",
                    colNames: ["TradeRef", "TradeType", "Quantity", "Price", "Amount", "Place order", "Status", "CreatedDate", "ฝากทอง"],
                    colModel: [
                    { name: "TradeRef", index: "TradeRef", width: 160, align: "center", sortable: false },
                    { name: "TradeType", index: "TradeType", width: 100, align: "center", sortable: false },
                    { name: "Quantity", index: "Quantity", width: 100, align: "right", sortable: false },
                    { name: "Price", index: "Price", width: 100, align: "right", sortable: false },
                    { name: "Amount", index: "Amount", width: 100, align: "right", sortable: false },
                    { name: "Leave", index: "Leave", width: 120, align: "center", sortable: false },
                    { name: "Status", index: "Status", width: 120, align: "center", sortable: false },
                    { name: "CreateDate", index: "CreateDate", width: 160, align: "center", sortable: false },
                    { name: "UseDeposit", index: "UseDeposit", width: 140, align: "center", sortable: false }
                    ],
                    // Grid total width and height
                    width: 1025,
                    height: '100%',
                    // Paging
                    toppager: false,
                    pager: $("#jqTablePagerReject"),
                    rowNum: 1000,     // disable page size dropdown
                    pgbuttons: false,     // disable page control like next, back button
                    pginput: false,
                    pgtext: null,
                    rowList: [],//[5, 10, 20],
                    viewrecords: true, // Specify if "total number of records" is displayed

                    // Default sorting
                    sortname: "",
                    sortorder: "desc",
                    loadtext: "Loading...",
                    caption: "",
                    loadComplete: reLoad = function (data) {

                        setTimeout(function () {
                            grid.setGridParam({ sortorder: "desc" }).trigger("reloadGrid");

                        }, 4000);
                    },
                    afterInsertRow: function (rowid, rowdata, rowelem) {
                        //set class for color row
                        if (rowdata.Status == 'Accept') {
                            grid.jqGrid('setRowData', rowid, '', 'success'); //add class
                        } else {
                        }
                    },

                }).navGrid("#jqTablePagerReject",
                    { refresh: false, add: false, edit: false, del: false, search: false },
                        {}, // settings for edit
                        {}, // settings for add
                        {}, // settings for delete
                        { sopt: ["cn"] } // Search options. Some options can be set on column level
                 );
            };
            LoadGridReject();


            var getPrice = function () {

                $.ajax({
                    type: "POST",
                    url: "@Url.Content("~/Trades/GetMarketPriceSale")",
                    dataType: "json",
                    data: {},
                    async: false,
                    success: function (e) {
                        //debugger;
                        $("#divBid1").text(e.bid1);
                        $("#divAsk1").text(e.ask1);
                        $("#divBid2").text(e.bid2);
                        $("#divAsk2").text(e.ask2);
                        $("#divBid3").text(e.bid3);
                        $("#divAsk3").text(e.ask3);
                        $("#divBid4").text(e.bid4);
                        $("#divAsk4").text(e.ask4);

                        setTimeout(function () {
                            getPrice();
                        }, 2000);

                    }
                });
            };
            getPrice();
        });

        var rejectTrade = function (rowid) {
            alert(rowid);
            $.ajax({
                type: "POST",
                dataType: "json",
                url: "@Url.Content("~/Trades/RejectTrade")",
                data: { tradeRef: rowid },
                async: false,
                success: function (e) {
                    alert('success');
                }
            });
        };

        //additon bidlot 9/9/2014

        var confirmTradeSale = function (e) {
            var type = "";
            var Leave;
            var lot;
            var price = "";
            var quan = "";
            //debugger;
            var memberId = $("#hdMemberId").val();
            var Memberlevel = $("#hdMemberLevel").val();
            if (e.id.indexOf("Bid") > -1) { type = "Sell"; } else { type = "Buy"; }
            if (e.id.indexOf("Leave") > -1) { Leave = true; } else { Leave = false; }
            if (e.id.indexOf("Lot") > -1) { lot = true; } else { lot = false; }
            $('#' + e.id).button('loading');

            //validate
            if (memberId == "") {
                $('#' + e.id).button('reset');
                var dialogWarning = new BootstrapDialog({
                    message: 'โปรดเลือกรายชื่อลูกค้า',
                    buttons: [{
                        label: 'OK',
                        action: function (dialogWarning) {
                            dialogWarning.close();
                            $("#txtMember").focus();
                        }
                    }]
                });
                dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                dialogWarning.open();
                return false;
            }

            if (Leave) {   //Leave order
                price = type == "Sell" ? $("#txtBidLeave").val() : $("#txtAskLeave").val();
                quan = type == "Sell" ? $("#txtBidQuantityLeave").val() : $("#txtAskQuantityLeave").val()
                if (price == "") {
                    $('#' + e.id).button('reset');
                    var dialogWarning = new BootstrapDialog({
                        message: 'โปรดใส่ราคาที่ต้องการ',
                        buttons: [{
                            label: 'OK',
                            action: function (dialogWarning) {
                                dialogWarning.close();
                                if (type == "Sell") {
                                    $("#txtBidLeave").focus();
                                } else {
                                    $("#txtAskLeave").focus();
                                }
                            }
                        }]
                    });
                    dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                    dialogWarning.open();
                    return false;
                }
            } else if (lot) {   //Big lot
                price = type == "Sell" ? $("#txtBidLot").val().replace(',', '') : $("#txtAskLot").val().replace(',', '');
                quan = type == "Sell" ? $("#ddlBidQuantityLot").val() : $("#ddlAskQuantityLot").val()
                if (price == "") {
                    $('#' + e.id).button('reset');
                    var dialogWarning = new BootstrapDialog({
                        message: 'โปรดใส่ราคา จาก Biglot',
                        buttons: [{
                            label: 'OK',
                            action: function (dialogWarning) {
                                dialogWarning.close();
                                if (type == "Sell") {
                                    $("#txtBidLot").focus();
                                } else {
                                    $("#txtAskLot").focus();
                                }
                            }
                        }]
                    });
                    dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                    dialogWarning.open();
                    return false;
                }
            }
            else {   // Order
                price = type == "Sell" ? $("#divBid" + Memberlevel).text().replace(',', '') : $("#divAsk" + Memberlevel).text().replace(',', '');
                quan = type == "Sell" ? $("#txtBidQty").val() : $("#txtAskQty").val()
            }
            //validate 0
            debugger
            if (quan < 1 || price < 1) {
                $('#' + e.id).button('reset');
                var dialogWarning = new BootstrapDialog({
                    message: 'โปรดใส่จำนวนทองที่มีค่ามากกว่า 0',
                    buttons: [{
                        label: 'OK',
                        action: function (dialogWarning) {
                            dialogWarning.close();
                            if (type == "Sell") {
                                $("#txtBidQty").focus();
                            } else {
                                $("#txtAskQty").focus();
                            }
                        }
                    }]
                });
                dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                dialogWarning.open();
                return false;
            }

            var isTiming = true;
            var priceMsg = price.split("").reverse().reduce(function (acc, num, i, orig) {
                return num + (i && !(i % 3) ? "," : "") + acc;
            }, "");
            var amount = ((quan * price * 656) / 10).toFixed(0).split("").reverse().reduce(function (acc, num, i, orig) {
                return num + (i && !(i % 3) ? "," : "") + acc;
            }, "");
            var useDeposit = $('input[name="rdo"]:checked').val() == "1" ? true : false;

            var msg = "Do you want to <B>" + type + "</B> Gold 99.99% Quantity <B>" + quan + "</B> KG Price <B>" + priceMsg + "</B> Amount <B>" + amount + "</B> THB?";
            var $textMsg = msg + "<div id='CountDownTimer' data-timer='10' style='width: 100%; height: 200px;text-align:center'></div>";

            if (memberId != "") {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "@Url.Content("~/Trades/CheckPortFolio")",
                    data: { MemberId: memberId, TradeType: type, Quantity: quan, UseDeposit: useDeposit },
                    async: true,
                    success: function (data) {
                        if (data.TradeAble == false) {
                            $('#' + e.id).button('reset');
                            var dialogLimit = new BootstrapDialog({
                                message: data.WarningMsg,
                                buttons: [{
                                    label: 'Close',
                                    action: function (dialogLimit) {
                                        dialogLimit.close();
                                    }
                                }]
                            });
                            dialogLimit.setType(BootstrapDialog.TYPE_WARNING);
                            dialogLimit.open();
                        }
                        else {
                            BootstrapDialog.show({
                                title: 'Comfirmation',
                                message: $textMsg,
                                cssClass: 'comfirm-dialog',
                                closable: false,
                                buttons: [{
                                    label: 'Cancel',
                                    action: function (dialog) {
                                        $("#CountDownTimer").TimeCircles().stop();//ทำให้เวลาไม่ค้าง,ควรใช้ closable: false ด้วย
                                        $('#' + e.id).button('reset');
                                        dialog.close();
                                    }
                                }, {
                                    label: 'OK',
                                    cssClass: 'btn btn-info',
                                    autospin: true,
                                    action: function (dialogRef) {
                                        if (isTiming) {
                                            $.ajax({
                                                type: "POST",
                                                dataType: "json",
                                                url: "@Url.Content("~/Trades/TradeOrderSale")",
                                                data: { Quantity: quan, Price: price, TradeType: type, Leave: Leave, Deposit: useDeposit, MemberId: memberId, Lot: lot },
                                                async: true,
                                                success: function (data) {
                                                    $("#CountDownTimer").TimeCircles().stop();
                                                    dialogRef.enableButtons(false);
                                                    dialogRef.setClosable(false);
                                                    dialogRef.getModalBody().html("Loading...");
                                                    setTimeout(function () {
                                                        $('#' + e.id).button('reset');
                                                        getPortFolio($("#hdMemberRef").val());
                                                        dialogRef.close();
                                                        var dialogSuccess = new BootstrapDialog({
                                                            message: data.status,
                                                            buttons: [{
                                                                label: 'OK',
                                                                action: function (dialogOk) {
                                                                    dialogOk.close();
                                                                }
                                                            }]
                                                        }
                                                            );
                                                        dialogSuccess.open();
                                                    }, 1000);
                                                }
                                            });
                                        }
                                        else {
                                            //Timeout
                                            setTimeout(function () {
                                                $('#' + e.id).button('reset');
                                                dialogRef.close();
                                                var dialogTimeout = new BootstrapDialog({
                                                    message: 'Transaction time out',
                                                    buttons: [{
                                                        label: 'OK',
                                                        action: function (dialogTimeout) {
                                                            dialogTimeout.close();
                                                        }
                                                    }]
                                                });
                                                //dialogTimeout.setType(BootstrapDialog.TYPE_DANGER);
                                                dialogTimeout.open();
                                            }, 300);
                                        }
                                    }
                                }]
                            });
                            //ต้องทำที่หลัง
                            setTimeout(function () {
                                var idle_timer = $('#CountDownTimer', window.parent.document);
                                idle_timer.data('CountDownTimer', 10);
                                idle_timer.TimeCircles({ time: { Days: { show: false }, Hours: { show: false }, Minutes: { show: false, color: '#4D8DC1' }, Seconds: { color: '#4D8DC1' } } })
                                .addListener(
                                    function (unit, value, total) {
                                        if (total == 3) {
                                            idle_timer.data('CountDownTimer', 3);
                                            idle_timer.TimeCircles({ time: { Days: { show: false }, Hours: { show: false }, Minutes: { color: '#900' }, Seconds: { color: '#900' } } })
                                        }
                                        if (total == 0) {
                                            $("#CountDownTimer").TimeCircles().stop();
                                            isTiming = false;
                                        }
                                    }
                                );
                            }, 200);
                        }
                    }
                });
            }
            //ต้องทำที่หลัง
            setTimeout(function () {
                var idle_timer = $('#CountDownTimer', window.parent.document);
                idle_timer.data('CountDownTimer', 10);
                idle_timer.TimeCircles({ time: { Days: { show: false }, Hours: { show: false }, Minutes: { show: false, color: '#4D8DC1' }, Seconds: { color: '#4D8DC1' } } })
                .addListener(
                    function (unit, value, total) {
                        if (total == 3) {
                            idle_timer.data('CountDownTimer', 3);
                            idle_timer.TimeCircles({ time: { Days: { show: false }, Hours: { show: false }, Minutes: { color: '#900' }, Seconds: { color: '#900' } } })
                        }
                        if (total == 0) {
                            $("#CountDownTimer").TimeCircles().stop();
                            isTiming = false;
                        }
                    }
                );
            }, 200);
        }

        //Big Lot
        $(function () {
            var getTradeLotOrder = function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Content("~/Trades/GetTradeSaleLotOrder")",
                    dataType: "json",
                    async: false,
                    success: function (e) {
                        $("#divBigLot").html(e.result);
                        setTimeout(function () {
                            getTradeLotOrder();
                        }, 2000);
                    }
                });
            };
            getTradeLotOrder();
        });


        $(function () {
            $('[rel="tooltip"],[data-toggle="tooltip"]').tooltip({ "placement": "bottom", delay: { show: 400, hide: 200 } });


            $("#txtBidQty").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#txtAskQty").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#txtBidLeave").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#txtAskLeave").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#txtBidQuantityLeave").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#txtAskQuantityLeave").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#spBig").click(function () {
                $("#divBig").slideToggle("slow");
                $(this).toggleClass("active");
                return false;
            });

            $("#spPlace").click(function () {
                $("#divPlace").slideToggle("slow");
                $(this).toggleClass("active");
                return false;
            });
            $("#spOrder").click(function () {
                $("#divOrder").slideToggle("slow");
                $(this).toggleClass("active");
                return false;
            });
            $("#spProfileDetail").click(function () {
                $("#divProfileDetail").slideToggle("slow");
                $(this).toggleClass("active");
                return false;
            });

            $("#txtMember").keydown(function (e) {
                if (e.keyCode == 13 && $("#txtMember").val().length != 0) {
                    //reset value
                    $("#hdMemberId").val("");
                    $("#hdMemberRef").val("");
                    $("#hdMemberLevel").val("");
                    $("#divLv1").show(0);
                    $("#divLv2").show(0);
                    $("#divLv3").show(0);
                    $("#divLv4").show(0);

                    getPortFolio($("#txtMember").val());
                }
            });

            $('#txtMember').autocomplete({
                minLength: 2,
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Content("~/Trades/getMemberAutoComplete")",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response(
                                $.map(data, function (item) {
                                    return { label: item.FirstName, value: item.MemberRef };
                                })
                            )
                        }
                    })
                },
                messages: { noResults: "", results: function () { } },
                select: function (event, ui) {
                    setTimeout(function () {
                        //$("#hdMemberId").val(ui.item.value);
                        $("#txtMember").val(ui.item.label);
                        getPortFolio(ui.item.value);
                    }, 1);
                },
                open: function (event, ui) {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                }
            });

            function setFormatCurrency(num) {
                //debugger;
                if (num.length > 3) {
                    num = num.replace(/[^\d\.\-\ ]/g, '');
                    var numVal = parseInt(num);
                    num = numVal.toString().split("").reverse().reduce(function (acc, num, i, orig) {
                        return num + (i && !(i % 3) ? "," : "") + acc;
                    }, "");
                }
                return num;
            }



        });

        var getPortFolio = function (MemberRef) {

            //debugger;
            $.ajax({
                type: "POST",
                url: "@Url.Content("~/Trades/getMemberProfile")",
                dataType: "json",
                data: { MemberRef: MemberRef },
                async: false,
                success: function (data) {
                    //debugger;
                    $("#hdMemberId").val(data.MemberId);
                    $("#hdMemberRef").val(MemberRef);
                    $("#hdMemberLevel").val(data.MemberLevel);
                    $("#divMemberProfile").html(data.result);
                    if (data.MemberLevel == "1") {
                        $("#divLv2").hide("fast");
                        $("#divLv3").hide("fast");
                        $("#divLv4").hide("fast");
                    } else if (data.MemberLevel == "2") {
                        $("#divLv1").hide("fast");
                        $("#divLv3").hide("fast");
                        $("#divLv4").hide("fast");
                    } else if (data.MemberLevel == "3") {
                        $("#divLv1").hide("fast");
                        $("#divLv2").hide("fast");
                        $("#divLv4").hide("fast");
                    } else if (data.MemberLevel == "4") {
                        $("#divLv1").hide("fast");
                        $("#divLv2").hide("fast");
                        $("#divLv3").hide("fast");
                    }
                }
            });
        };
    </script>
}

@model HSH.Data.Models.MemberAssetGoldWithdrawListModels

@{
    ViewBag.Title = "ถอน ทองหลักประกัน";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>
<hr />

@using (Html.BeginForm("AddAssetGoldOut", "Members", FormMethod.Post, new { @class = "form-horizontal", id = "frmAssetGoldOut" }))
{
    @Html.AntiForgeryToken()
    @Html.Partial("PortFolio", Model.MemberPortFolio)

    <div class="form-horizontal">

        @Html.HiddenFor(model => model.MemberId)
        @*@Html.HiddenFor(model => model.MemberAssetWithdrawList)
            @Html.HiddenFor(model => model.MemberPortFolio)*@

        <div class="form-group">
            <div class="col-md-12 text-center">
                <input type="button" onclick="bsDialog();" value="Withdraw" class="btn btn-default" style="width:100px" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "IndexAssetGold", new { id = Model.MemberId }) |
    @Html.ActionLink("Deposit", "AddAssetGold", new { id = Model.MemberId })
</div>
<br />
<div class="table-responsive">
    <table class="table table-striped table-hover table-bordered table-responsive">
        <tr class="info">
            <th class="text-center">ถอน</th>
            <th class="text-center">วันที่</th>
            <th class="text-center">โดย</th>
            <th class="text-center">ประเภท</th>
            <th class="text-center">อนุมัติโดย</th>
            <th class="text-center">ยี่ห้อ</th>
            <th class="text-center">ซีเรียลนัมเบอร์</th>
            <th class="text-center">สาขา</th>
            <th class="text-center">สถานะ</th>
            <th class="text-center">จำนวนทองคำ</th>
        </tr>
        @foreach (var item in Model.MemberAssetWithdrawList)
        {
            <tr>
                <td class="text-center">
                    <div class="col-md-1 form-inline text-center">
                        <label class="checkbox">
                            @if (item.WithdrawStatus == null && item.Status == HSH.Data.Helper.EnumHelper.MemberAssetStatus.Approved.ToString() && item.Direction == HSH.Data.Helper.EnumHelper.DirectionAssetType.In.ToString())
                            {
                                @Html.CheckBoxFor(model => item.WithdrawCheck, new { @class = "chk", @value = @item.AssetId })
                            }
                            else
                            {
                                @Html.CheckBoxFor(model => item.WithdrawCheck, new { @class = "chk", @value = @item.AssetId, disabled = "disabled" })
                            }

                        </label>
                        @*<input type="checkbox" value="@item.Direction" class="chk" />*@
                    </div>
                </td>
                <td class="text-center">
                    @HSH.Data.Helper.StringHelper.ToStringDateTimeFormat(item.CreateDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateBy)
                </td>
                <td class="text-center">
                    @if (item.Direction == HSH.Data.Helper.EnumHelper.DirectionAssetType.In.ToString())
                    {
                        <span class="label label-primary">@HSH.Data.Helper.EnumHelper.DirectionAssetType.Deposit</span>
                    }
                    else
                    {
                        <span class="label label-danger">@HSH.Data.Helper.EnumHelper.DirectionAssetType.Withdraw</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApproveId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GoldBrand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GoldSerialNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Branch)
                </td>
                @*<td class="text-center">
                        @if (item.WithdrawStatus == HSH.Data.Helper.EnumHelper.MemberAssetStatus.Wait.ToString())
                        {
                            <span class="label label-warning">@item.WithdrawStatus</span>
                        }
                        else if (item.WithdrawStatus == HSH.Data.Helper.EnumHelper.MemberAssetStatus.Approved.ToString())
                        {
                            <span class="label label-success">@item.WithdrawStatus</span>
                        }
                        else if (item.WithdrawStatus == HSH.Data.Helper.EnumHelper.MemberAssetStatus.DisApproved.ToString())
                        {
                            <span class="label label-danger">@item.WithdrawStatus</span>
                        }
                        else
                        {
                            <span class="label label-info">None</span>
                        }
                    </td>*@
                <td class="text-center">
                    @if (item.Status == HSH.Data.Helper.EnumHelper.MemberAssetStatus.Wait.ToString())
                    {
                        <span class="label label-warning">@item.Status</span>
                    }
                    else if (item.Status == HSH.Data.Helper.EnumHelper.MemberAssetStatus.Approved.ToString())
                    {
                        <span class="label label-success">@item.Status</span>
                    }
                    else if (item.Status == HSH.Data.Helper.EnumHelper.MemberAssetStatus.DisApproved.ToString())
                    {
                        <span class="label label-danger">@item.Status</span>
                    }
                </td>
                <td class="text-right">
                    @HSH.Data.Helper.StringHelper.ToStringCurrency(item.AssetGold.ToString())
                </td>
            </tr>
        }
        @if (Model.MemberAssetWithdrawList.Count() == 0)
        {
            <tr>
                <td colspan="10" class="text-center text-danger"> @HSH.Data.Helper.StringHelper.stringNotFound.ToString() </td>
            </tr>
        }
        else
        {
            <tr class="active">
                <th colspan="9" class="text-center"><span class="label label-primary">Total</span></th>
                <th class="text-right">@HSH.Data.Helper.StringHelper.ToStringCurrency(Model.MemberAssetWithdrawList.Where(a => a.Direction == HSH.Data.Helper.EnumHelper.DirectionAssetType.In.ToString()).Sum(a => a.AssetGold).Value.ToString())</th>
            </tr>
            @*<tr class="active">
                    <th colspan="8" class="text-center"><span class="label label-danger">Total @HSH.Data.Helper.EnumHelper.DirectionAssetType.Withdraw</span></th>
                    <th class="text-right">@HSH.Data.Helper.StringHelper.ToStringCurrency(Model.MemberAssetWithdrawList.Where(a => a.Direction == HSH.Data.Helper.EnumHelper.DirectionAssetType.Out.ToString()).Sum(a => a.AssetGold).Value.ToString())</th>
                </tr>*@
        }
    </table>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script language="javascript" type="text/javascript">

        var bsDialog = function () {
            var chkArray = [];
            var memberId = $("#MemberId").val();
            $(".chk:checked").each(function () {
                chkArray.push($(this).val());
            });
            var selected;
            selected = chkArray.join(',') + ",";

            if (selected.length > 1) {
                //validate
                $.ajax({
                    type: "POST",
                    url: "@Url.Content("~/Members/CheckAssetGoldWithdrawAble")",
                    dataType: "json",
                    async: false,
                    data: { arrData: selected, MemberId: memberId },
                    success: function (e) {
                        if (e.Message != "") {
                            var dialogWarning = new BootstrapDialog({
                                message: e.Message,
                                buttons: [{
                                    label: 'OK',
                                    action: function (dialogWarning) {
                                        dialogWarning.close();
                                    }
                                }]
                            });
                            dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                            dialogWarning.open();
                            return;
                        }
                        else {
                            BootstrapDialog.show({
                                title: 'Comfirmation',
                                message: "Do you want to save?",
                                cssClass: 'comfirm-dialog',
                                buttons: [{
                                    label: 'Cancel',
                                    action: function (dialog) {
                                        dialog.close();
                                    }
                                }, {
                                    label: 'OK',
                                    cssClass: 'btn-primary',
                                    action: function (dialog) {
                                        $.ajax({
                                            type: "POST",
                                            url: "@Url.Content("~/Members/AddAssetGoldWithdraw")",
                                            dataType: "json",
                                            async: false,
                                            data: { arrData: selected, MemberId: memberId },
                                            success: function (e) {
                                                //debugger;
                                                if (e.Message == "") {
                                                    top.window.location.href = "/Members/AddAssetGoldOut/" + memberId;
                                                } else {
                                                    dialog.close();
                                                    var dialogWarning = new BootstrapDialog({
                                                        message: e.Message,
                                                        buttons: [{
                                                            label: 'OK',
                                                            action: function (dialogWarning) {
                                                                dialogWarning.close();
                                                            }
                                                        }]
                                                    });
                                                    dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                                                    dialogWarning.open();
                                                    return;
                                                }
                                            }
                                        });
                                    }
                                }]
                            });
                        }
                    }
                });

            } else {
                var dialogWarning = new BootstrapDialog({
                    message: "โปรดเลือกรายการที่ต้องการถอน",
                    buttons: [{
                        label: 'OK',
                        action: function (dialogWarning) {
                            dialogWarning.close();
                        }
                    }]
                });
                dialogWarning.setType(BootstrapDialog.TYPE_WARNING);
                dialogWarning.open();
                return;
            }



            var postWithdraw = function () {
                var chkArray = [];
                debugger;
                $(".chk:checked").each(function () {
                    chkArray.push($(this).val());
                });
                var selected;
                selected = chkArray.join(',') + ",";

                if (selected.length > 1) {
                    alert("You have selected " + selected);
                } else {
                    alert("Please at least one of the checkbox");
                }

                if (selected.length > 1) {


                }
            }





        }

    </script>
}





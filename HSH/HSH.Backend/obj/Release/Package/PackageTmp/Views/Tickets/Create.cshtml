@model HSH.Data.Models.TicketCreateViewModels

@{
    ViewBag.Title = "สร้างออเดอร์";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>
<hr />

@using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmTicket", name = "frmTicket" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MemberId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UseDeposit, htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.Label("ขายทองฝาก", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-1 form-inline">
                <label class="checkbox">
                    @Html.CheckBoxFor(model => model.UseDeposit, new { @checked = "checked" })
                </label>                
            </div>           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var value in Enum.GetValues(typeof(HSH.Data.Helper.EnumHelper.TicketType)))
                {
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.TicketType, value)
                        @*@Html.Label(value.ToString())*@
                        @HSH.Data.Helper.EnumHelper.GetDescription(value)
                    </label>
                }
                <div>
                    @Html.ValidationMessageFor(model => model.TicketType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2", @for = "Quantity" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <input type="button" onclick="bsDialog(this);" value="Create" class="btn btn-default" style="width:100px" />
                @*<input type="submit" id="btnSave" value="Create" class="btn btn-default" />*@
            </div>
        </div>

    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<style>
            .comfirm-dialog {
                width: 800px;
                font-size: 30px;
            }
        </style>*@

    <script language="javascript" type="text/javascript">

        $(function () {

            $("#Quantity").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                // 110 = .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#Price").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            //$("#Quantity").keyup(function (e) {
            //    var num = setFormatCurrency(this.value);
            //    this.value = num;
            //});

            $("#Price").keyup(function (e) {
                var num = setFormatCurrency(this.value);
                this.value = num;
            });

            function setFormatCurrency(num) {
                if (num.length > 3) {
                    num = num.replace(/[^\d\.\-\ ]/g, '');
                    var numVal = parseInt(num);
                    num = numVal.toString().split("").reverse().reduce(function (acc, num, i, orig) {
                        return num + (i && !(i % 3) ? "," : "") + acc;
                    }, "");
                }
                return num;
            }

            $("#Quantity").blur(function (e) {
                calAmount();
            });

            $("#Price").blur(function (e) {
                calAmount();
            });

            function calAmount() {
                var q = $("#Quantity").val().replace(/[^\d\.\-\ ]/g, '');
                var p = $("#Price").val().replace(/[^\d\.\-\ ]/g, '');
                var a = ((q * p) * 656) / 10;
                a = a.toString().split("").reverse().reduce(function (acc, num, i, orig) {
                    return num + (i && !(i % 3) ? "," : "") + acc;
                }, "");
                $("#Amount").val(a);
            }

            function formatDollar(num) {
                var p = num.toFixed(2).split(".");
                //"$" +
                return p[0].split("").reverse().reduce(function (acc, num, i, orig) {
                    return num + (i && !(i % 3) ? "," : "") + acc;
                }, "");// + "." + p[1];
            }

        });


        var bsConfirm = function () {
            BootstrapDialog.confirm('Do you want to save', function (result) {
                if (result) {
                    $("#frmTicket").submit();
                }
            });
        }

        var bsDialog = function (e) {
            var memberId = $("#MemberId").val();
            var type = $("input:radio[name=TicketType]:checked").val();
            var quan = $("#Quantity").val();
            var price = $("#Price").val();
            var amount = $("#Amount").val();
            var msgType = type == "Buy" ? "ซื้อ" : "ขาย";
            var msg = "คุณต้องการที่จะ <B>" + msgType + "ทอง</B> 99.99% จำนวน <B>" + quan + "</B> Kg ที่ราคา <B>" + price + "</B> เป็นจำนวนเงิน <B>" + amount + "</B> บาท ?";

            quan = quan.replace(/[^\d\.\-\ ]/g, '');
            //price = price.replace(/[^\d\.\-\ ]/g, '');
            amount = amount.replace(/[^\d\.\-\ ]/g, '');

            //validate 1
            if (memberId == "" || type == "undefined" || quan == "" || price == "" || amount == "" || price.length != 6) {
                $("#frmTicket").submit();
                return;
            }
            //validate 2
            debugger;
            $.ajax({
                type: "POST",
                dataType: "json",
                url: "@Url.Content("~/Tickets/ValidateCreate")",
                data: { MemberId: memberId, TicketType: type, Quantity: quan, Amount: amount, Price: price },
                async: true,
                success: function (data) {
                    if (data.ModelState == false) {
                        $("#frmTicket").submit();
                    } else {
                        // success
                        if (data.TradeAble == false) {
                            $('#' + e.id).button('reset');
                            var dialogLimit = new BootstrapDialog({
                                message: data.WarningMsg,
                                buttons: [{
                                    label: 'Close',
                                    action: function (dialogLimit) {
                                        dialogLimit.close();
                                    }
                                }]
                            });
                            dialogLimit.setType(BootstrapDialog.TYPE_WARNING);
                            dialogLimit.open();
                        }
                        else {
                            BootstrapDialog.show({
                                title: 'Comfirmation',
                                message: msg,
                                cssClass: 'comfirm-dialog',
                                buttons: [{
                                    label: 'Cancel',
                                    action: function (dialog) {
                                        dialog.close();
                                    }
                                }, {
                                    label: 'OK',
                                    cssClass: 'btn-primary',
                                    action: function (dialog) {
                                        $("#frmTicket").submit();
                                    }
                                }]
                            });
                        }
                        //
                    }
                }
            });


        }
    </script>
}

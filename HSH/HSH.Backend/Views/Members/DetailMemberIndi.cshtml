@model HSH.Data.Models.MemberIndividualViewModels

@{
    ViewBag.Title = "รายละเอียด สมาชิก";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>
<hr />
@using (Html.BeginForm("DetailMemberIndi", "Members", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MemberId)

        <div class="form-group">
            @Html.LabelFor(model => model.MemberRef, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberRef, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberLevel, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MemberGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.MemberGroup, (SelectList)ViewBag.MemberGroupList, new { @class = "form-control", @readonly = "readonly" })*@
                @Html.EditorFor(model => model.MemberGroup, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 dropdown">
                @Html.EditorFor(model => model.MemberTitle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2", @for = "BirthDate" })
            <div class="col-md-4">
                @*@Html.TextBoxFor(model => model.BirthDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @readonly = "readonly" })*@
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PassportId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PassportId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfIssue, htmlAttributes: new { @class = "control-label col-md-2", @for = "DateOfIssue" })
            <div class="col-md-4">
                @*<div class="input-group date" id="DateOfIssue" data-date-format="DD/MM/YYYY">
                        @Html.TextBoxFor(model => model.DateOfIssue, "{0:dd/MM/yyyy}", new { @class = "form-control", @readonly = "readonly" })
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>*@
                @Html.EditorFor(model => model.DateOfIssue, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfExpire, htmlAttributes: new { @class = "control-label col-md-2", @for = "DateOfExpire" })
            <div class="col-md-4">
                @*<div class="input-group date" id="DateOfExpire" data-date-format="DD/MM/YYYY">
                        @Html.TextBoxFor(model => model.DateOfExpire, new { @class = "form-control", @readonly = "readonly" })
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>*@
                @Html.EditorFor(model => model.DateOfExpire, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Political, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
             @Html.EditorFor(model => model.Political, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>      
    </div>
     <div class="form-group">
        @Html.LabelFor(model => model.HomeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.HomeAddress, new { @class = "form-control", @rows = "3", @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PresentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.PresentAddress, new { @class = "form-control", @rows = "3", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<div class="dropdown">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.WorkType, "ธุรกิจส่วนตัว") ธุรกิจส่วนตัว
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.WorkType, "รับราชการ/รัฐวิสาหกิจ") รับราชการ/รัฐวิสาหกิจ
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.WorkType, "ลูกจ้าง/พนักงานบริษัท") ลูกจ้าง/พนักงานบริษัท
                    </label>
                </div>*@
            @Html.EditorFor(model => model.WorkType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkPlace, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WorkPlace, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkBusinessType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WorkBusinessType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkTelephone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WorkTelephone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkFax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WorkFax, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MateName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MateName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MateCareer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MateCareer, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MatePolitical, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MatePolitical, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MateTelephone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MateTelephone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MateWorkplace, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MateWorkplace, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MateBusinessType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MateBusinessType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>
    <br />
    <fieldset>
        <legend>บุคคลที่ติดต่อในกรณีฉุกเฉิน</legend>
        @*<hr />*@
        <div class="form-group">
            @Html.LabelFor(model => model.EmergencyPersonName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmergencyPersonName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmergencyRelationship, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmergencyRelationship, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmergencyAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.EmergencyAddress, new { @class = "form-control", @rows = "3", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmergencyTelephone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmergencyTelephone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
    </fieldset>

    <br />
    <fieldset>
        <legend>รายละเอียดธนาคาร</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
               
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BankAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccountNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BankAccountName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccountName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BankAccountType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccountType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankBranch, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BankPayType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankPayType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

    </fieldset>
    <br />
    <fieldset>
        <legend>รายละเอียดผู้รับมอบอำนาจ</legend>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorizerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorizerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AuthorizerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorizerId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AuthorizerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorizerAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorizerTel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorizerTel, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", Session["CurrentPageIndex"].ToString())
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <script language="javascript" type="text/javascript">

        $(function () {
            $('#BirthDate').datetimepicker({
                useStrict: false,
                pickTime: false
            });

            $('#DateOfIssue').datetimepicker({
                useStrict: false,
                pickTime: false
            });

            $('#DateOfExpire').datetimepicker({
                useStrict: false,
                pickTime: false
            });
        });

    </script>
}

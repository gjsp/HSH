@model IEnumerable<HSH.Data.Models.Member>

@if (Model != null)
{
    <div class="table-responsive">
        <table class="table table-condensed table-striped table-hover table-bordered table-responsive">
            <tr class="text-center info">
                <th class="text-center">เลขที่บัญชีซื้อขายทองคำ</th>
                <th class="text-center">ชื่อสมาชิก</th>
                <th class="text-center">นามสกุล</th>
                <th class="text-center">ประเภทสมาชิก</th>
                <th class="text-center">วันที่สร้าง</th>
                <th class="text-center">สร้างโดย</th>
                <th class="text-center">วันที่อนุมัติ</th>
                <th class="text-center">อนุมัติโดย</th>
                <th class="text-center">สถานะ</th>
                <th class="text-center"></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-center">
                        @Html.ActionLink(item.MemberRef, "ViewPortFolio", new { id = item.MemberId }, new { title = "View portfolio" })
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td class="text-center">
                        @if (item.MemberType == HSH.Data.Helper.EnumHelper.MemberType.Company.ToString())
                        {
                            <span class="label label-primary">@HSH.Data.Helper.EnumHelper.GetDescription(HSH.Data.Helper.EnumHelper.MemberType.Company) </span>
                        }
                        else if (item.MemberType == HSH.Data.Helper.EnumHelper.MemberType.Foreign.ToString())
                        {
                            <span class="label label-warning">@HSH.Data.Helper.EnumHelper.GetDescription(HSH.Data.Helper.EnumHelper.MemberType.Foreign) </span>
                        }
                        else if (item.MemberType == HSH.Data.Helper.EnumHelper.MemberType.Normal.ToString())
                        {
                            <span class="label label-default">@HSH.Data.Helper.EnumHelper.GetDescription(HSH.Data.Helper.EnumHelper.MemberType.Normal) </span>
                        }
                        else if (item.MemberType == HSH.Data.Helper.EnumHelper.MemberType.VIP.ToString())
                        {
                            <span class="label label-success">@HSH.Data.Helper.EnumHelper.GetDescription(HSH.Data.Helper.EnumHelper.MemberType.VIP) </span>
                        }
                        else if (item.MemberType == HSH.Data.Helper.EnumHelper.MemberType.Walkin.ToString())
                        {
                            <span class="label label-danger">@HSH.Data.Helper.EnumHelper.GetDescription(HSH.Data.Helper.EnumHelper.MemberType.Walkin) </span>
                        }
                    </td>
                    <td class="text-center">
                        @*@item.CreateDate.Value.ToString(HSH.Data.Helper.StringHelper.formatdate)*@
                        @HSH.Data.Helper.StringHelper.ToStringDateTimeFormat(item.CreateDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserCreated.UserName)
                    </td>
                    <td class="text-center">
                        @HSH.Data.Helper.StringHelper.ToStringDateTimeFormat(item.ApproveRegisterDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserApproveRegister.UserName)
                    </td>
                    <td class="text-center" style="width:170px">
                        @if (item.Active == null)
                        {
                            @Html.ActionLink("Approve", "ApproveRegister", new { id = item.MemberId })
                            <span>|</span>
                            @Html.ActionLink("Disapprove", "ApproveRegisterOut", new { id = item.MemberId })
                        }
                        else if (item.Active == true)
                        {
                            <span class="label label-success">Approved</span>
                        }
                        else if (item.Active == false)
                        {
                            <span class="label label-danger">DisApproved</span>
                        }
                    </td>
                    <td class="text-center" style="width:150px">
                        @if (item.MemberType == HSH.Data.Helper.EnumHelper.MemberType.Company.ToString())
                        {
                             @Html.ActionLink("Detail", "DetailMemberIndi", new { id = item.MemberId })
                        }
                        else
                        {
                             @Html.ActionLink("Detail", "DetailMemberIndi", new { id = item.MemberId })
                        }
                        
                        @*@if (item.ApproveRegisterId == null)
                        {
                            @Html.ActionLink("Approve", "ApproveRegister", new { id = item.MemberId })                            
                            <span>|</span>
                           @Html.ActionLink("Disapprove", "ApproveRegisterOut", new { id = item.MemberId })
                        }
                        else
                        {
                            @Html.ActionLink("Edit", "ApproveRegister", new { id = item.MemberId })
                        }*@
                        @if (item.Active == true)
                        { 
                            <span> | </span>
                           @Html.ActionLink("Edit", "ApproveRegister", new { id = item.MemberId }) 
                        }
                    </td>
                </tr>
            }
            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="9" class="text-center text-danger"> @HSH.Data.Helper.StringHelper.stringNotFound.ToString() </td>
                </tr>
            }

        </table>
    </div>
}